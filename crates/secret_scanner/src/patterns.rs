use super::{Pattern, Severity};

/// Default patterns for secret detection
pub const DEFAULT_PATTERNS: &[Pattern] = &[
    Pattern {
        name: "AWS Access Key ID",
        regex: r"AKIA[0-9A-Z]{16}",
        description: "AWS access key ID",
        severity: Severity::Critical,
    },
    Pattern {
        name: "AWS Secret Access Key",
        regex: r"[0-9a-zA-Z/+]{40}",
        description: "AWS secret access key",
        severity: Severity::Critical,
    },
    Pattern {
        name: "GitHub Token",
        regex: r"ghp_[0-9a-zA-Z]{36}",
        description: "GitHub personal access token",
        severity: Severity::Critical,
    },
    Pattern {
        name: "GitLab Token",
        regex: r"glpat-[0-9a-zA-Z]{20}",
        description: "GitLab personal access token",
        severity: Severity::Critical,
    },
    Pattern {
        name: "SSH Private Key",
        regex: r"-----BEGIN (RSA|EC|OPENSSH) PRIVATE KEY-----",
        description: "SSH private key",
        severity: Severity::Critical,
    },
    Pattern {
        name: "Database Password",
        regex: r"(?i)password\s*:?\s*['"]?([0-9a-zA-Z]{8,})['"]?",
        description: "Database password",
        severity: Severity::High,
    },
    Pattern {
        name: "API Key",
        regex: r"api(_key|_token)?\s*:?\s*['"]?([0-9a-zA-Z]{20,})['"]?",
        description: "API key or token",
        severity: Severity::High,
    },
    Pattern {
        name: "Bearer Token",
        regex: r"Bearer\s+['"]?([0-9a-zA-Z/+]{40,})['"]?",
        description: "Bearer token",
        severity: Severity::High,
    },
    Pattern {
        name: "JWT Token",
        regex: r"[0-9a-zA-Z_-]+\.[0-9a-zA-Z_-]+\.[0-9a-zA-Z_-]+",
        description: "JWT token",
        severity: Severity::High,
    },
    Pattern {
        name: "Stripe API Key",
        regex: r"sk_live_[0-9a-zA-Z]{24}",
        description: "Stripe live API key",
        severity: Severity::Critical,
    },
    Pattern {
        name: "Stripe Test API Key",
        regex: r"sk_test_[0-9a-zA-Z]{24}",
        description: "Stripe test API key",
        severity: Severity::High,
    },
    Pattern {
        name: "Firebase Secret",
        regex: r"AIza[0-9A-Za-z-_]{35}",
        description: "Firebase API key",
        severity: Severity::Critical,
    },
    Pattern {
        name: "Heroku API Key",
        regex: r"heroku_[0-9a-f]{32}",
        description: "Heroku API key",
        severity: Severity::Critical,
    },
    Pattern {
        name: "Twilio API Key",
        regex: r"SK[0-9a-f]{32}",
        description: "Twilio API key",
        severity: Severity::Critical,
    },
    Pattern {
        name: "Twitter API Key",
        regex: r"[0-9a-zA-Z]{35}.[0-9a-zA-Z]{40}",
        description: "Twitter API key",
        severity: Severity::High,
    },
    Pattern {
        name: "Slack Token",
        regex: r"xox[baprs]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-zA-Z0-9]{32}",
        description: "Slack API token",
        severity: Severity::High,
    },
    Pattern {
        name: "Google API Key",
        regex: r"AIza[0-9A-Za-z-_]{35}",
        description: "Google API key",
        severity: Severity::High,
    },
    Pattern {
        name: "Stripe Webhook Secret",
        regex: r"whsec_[0-9a-zA-Z]{24}",
        description: "Stripe webhook secret",
        severity: Severity::High,
    },
    Pattern {
        name: "PayPal API Signature",
        regex: r"([0-9a-zA-Z]{16})",
        description: "PayPal API signature",
        severity: Severity::High,
    },
    Pattern {
        name: "Salesforce Client ID",
        regex: r"[0-9a-zA-Z]{15}|[0-9a-zA-Z]{18}",
        description: "Salesforce client ID",
        severity: Severity::High,
    },
    Pattern {
        name: "DigitalOcean API Key",
        regex: r"[0-9a-f]{64}",
        description: "DigitalOcean API key",
        severity: Severity::High,
    },
    Pattern {
        name: "Shopify API Key",
        regex: r"shpss_[0-9a-z]{32}",
        description: "Shopify API key",
        severity: Severity::High,
    },
    Pattern {
        name: "GCP Service Account Key",
        regex: r"""type":\s*"service_account"",
        description: "GCP service account key",
        severity: Severity::Critical,
    },
    Pattern {
        name: "Azure Client Secret",
        regex: r"[0-9a-zA-Z-]{36}",
        description: "Azure client secret",
        severity: Severity::Critical,
    },
];
    Pattern {
        name: "AWS Access Key ID",
        regex: r"AKIA[0-9A-Z]{16}",
        description: "AWS access key ID",
        severity: Severity::Critical,
    },
    Pattern {
        name: "AWS Secret Access Key",
        regex: r"[0-9a-zA-Z/+]{40}",
        description: "AWS secret access key",
        severity: Severity::Critical,
    },
    Pattern {
        name: "GitHub Token",
        regex: r"ghp_[0-9a-zA-Z]{36}",
        description: "GitHub personal access token",
        severity: Severity::Critical,
    },
    Pattern {
        name: "GitLab Token",
        regex: r"glpat-[0-9a-zA-Z]{20}",
        description: "GitLab personal access token",
        severity: Severity::Critical,
    },
    Pattern {
        name: "SSH Private Key",
        regex: r"-----BEGIN (RSA|EC|OPENSSH) PRIVATE KEY-----",
        description: "SSH private key",
        severity: Severity::Critical,
    },
    Pattern {
        name: "Database Password",
        regex: r"(?i)password\s*:?\s*['"]?([0-9a-zA-Z]{8,})['"]?",
        description: "Database password",
        severity: Severity::High,
    },
    Pattern {
        name: "API Key",
        regex: r"api(_key|_token)?\s*:?\s*['"]?([0-9a-zA-Z]{20,})['"]?",
        description: "API key or token",
        severity: Severity::High,
    },
    Pattern {
        name: "Bearer Token",
        regex: r"Bearer\s+['"]?([0-9a-zA-Z/+]{40,})['"]?",
        description: "Bearer token",
        severity: Severity::High,
    },
    Pattern {
        name: "JWT Token",
        regex: r"[0-9a-zA-Z_-]+\.[0-9a-zA-Z_-]+\.[0-9a-zA-Z_-]+",
        description: "JWT token",
        severity: Severity::High,
    },
];
